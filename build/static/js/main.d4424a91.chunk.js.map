{"version":3,"sources":["Todolist/Todoitems.js","Todolist/Todoinput.js","Todolist/Todolist.js","index.js"],"names":["Todoitems","className","this","props","todocount","todo","map","item","idx","isChecked","key","type","checked","onChange","changeTodo","title","onClick","delTodo","donecount","Component","Todoinput","handleInput","e","keyCode","todoitem","target","value","addTodo","setState","n1","handleChange","name","state","htmlFor","style","fontSize","id","onKeyDown","placeholder","Todolist","setStorage","localStorage","setItem","JSON","stringify","getStorage","parse","getItem","addItem","itm","changeCount","delitem","splice","changeStatus","i","length","data","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d4424a91.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class Todoitems extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"details\">\r\n                <h2>正在进行<span>{this.props.todocount}</span></h2>\r\n                <ul className=\"list\">\r\n                    {\r\n                        this.props.todo.map((item,idx)=>{\r\n                            if(!item.isChecked){\r\n                                return (\r\n                                    <li key={idx}><input type=\"checkbox\" checked={item.isChecked} onChange={()=>this.props.changeTodo(idx)} />{item.title}\r\n                                        <button onClick={()=>{this.props.delTodo(idx)}}>删除</button>\r\n                                    </li>\r\n                                )\r\n                            }\r\n                        })\r\n                    }\r\n                </ul>\r\n                <h2>已经完成<span>{this.props.donecount}</span></h2>\r\n                <ul className=\"list\">\r\n                    {\r\n                        this.props.todo.map((item,idx)=>{\r\n                            if(item.isChecked){\r\n                                return (\r\n                                    <li key={idx}><input type=\"checkbox\" checked={item.isChecked} onChange={()=>this.props.changeTodo(idx)}/>{item.title}\r\n                                        <button onClick={()=>{this.props.delTodo(idx)}}>删除</button>\r\n                                    </li>\r\n                                )\r\n                            }\r\n                        })\r\n                    }\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nexport default class Todoinput extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            n1:''\r\n        }\r\n    }\r\n    handleInput = (e)=>{\r\n        if(e.keyCode === 13){\r\n            let todoitem={\r\n                title:e.target.value,\r\n                isChecked:false\r\n            }\r\n            this.props.addTodo(todoitem);\r\n            this.setState({\r\n                n1:''\r\n            })\r\n        }\r\n    }\r\n    handleChange = (e)=>{\r\n        this.setState({\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n    render() {\r\n        return(\r\n            <div className=\"headerwrap\">\r\n                <div className=\"header\">\r\n                    <label htmlFor=\"inp\" style={{fontSize:'20px'}}>ToDoList</label>\r\n                    <input id=\"inp\" name=\"n1\" onChange={(e)=>this.handleChange(e)} value={this.state.n1} onKeyDown={this.handleInput} type=\"text\" placeholder='添加ToDo'/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Todoitems from './Todoitems'\r\nimport Todoinput from './Todoinput'\r\n\r\nexport default class Todolist extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            todo:[\r\n                {\r\n                    title:\"react.js\",\r\n                    isChecked:false\r\n                },\r\n                {\r\n                    title:\"node.js\",\r\n                    isChecked:false\r\n                }\r\n            ],\r\n            todocount:0,\r\n            donecount:0\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        let data = this.getStorage(\"todolist\");\r\n        if(data){\r\n            this.setState({\r\n                todo:data\r\n            },()=>{\r\n                this.changeCount();\r\n            })\r\n        }\r\n    }\r\n    componentWillMount(){\r\n        this.changeCount();\r\n    }\r\n    setStorage = (key,value)=>{\r\n        localStorage.setItem(key,JSON.stringify(value));\r\n    }\r\n    getStorage = (key)=>{\r\n        return JSON.parse(localStorage.getItem(key));\r\n    }\r\n    addItem = (itm)=>{\r\n        this.setState({\r\n            todo:[...this.state.todo,itm]\r\n        },()=>{\r\n            this.changeCount();\r\n            this.setStorage(\"todolist\",[...this.state.todo]);\r\n        });\r\n    }\r\n    delitem = (idx)=>{\r\n        var todo =[...this.state.todo];\r\n        todo.splice(idx,1);\r\n        this.setState({\r\n            todo\r\n        },()=>{\r\n            this.changeCount();\r\n            this.setStorage(\"todolist\",[...this.state.todo]);\r\n        });\r\n    }\r\n    changeStatus = (idx)=>{\r\n        var todo =[...this.state.todo];\r\n        todo[idx].isChecked = !todo[idx].isChecked;\r\n        this.setState({\r\n            todo\r\n        },()=>{\r\n            this.changeCount();\r\n            this.setStorage(\"todolist\",[...this.state.todo]);\r\n        });\r\n    }\r\n    changeCount = ()=>{\r\n        var todocount=0;\r\n        var donecount=0;\r\n        let todo = this.state.todo;\r\n        for(var i=0;i<todo.length;i++){\r\n            if(!todo[i].isChecked){\r\n                todocount++;\r\n            }else{\r\n                donecount++;\r\n            }\r\n        };\r\n        this.setState({\r\n            todocount:todocount,\r\n            donecount:donecount\r\n        })\r\n    } \r\n    render() {\r\n        return (\r\n            <div>\r\n                <Todoinput addTodo={this.addItem}/>\r\n                <Todoitems delTodo={this.delitem} changeTodo={this.changeStatus} todo={this.state.todo} todocount={this.state.todocount} donecount={this.state.donecount}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Todolist from './Todolist/Todolist';\nimport './index.css';\n\nReactDOM.render(<Todolist/>, document.getElementById('root'));"],"sourceRoot":""}